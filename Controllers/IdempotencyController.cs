using Microsoft.AspNetCore.Mvc;
using SubscriptionApi.Services;

namespace SubscriptionApi.Controllers
{
    /// <summary>
    /// Controller for handling idempotency key generation.
    /// This controller exposes an endpoint for generating unique idempotency keys
    /// that can be used for idempotent requests in the application.
    /// </summary>
    [ApiController]
    [Route("[controller]")]
    public class IdempotencyController : ControllerBase
    {
        private readonly IIdempotencyService _idempotencyService;

        /// <summary>
        /// Initializes a new instance of the <see cref="IdempotencyController"/> class.
        /// </summary>
        /// <param name="idempotencyService">The service responsible for generating idempotency keys.</param>
        public IdempotencyController(IIdempotencyService idempotencyService)
        {
            _idempotencyService = idempotencyService;
        }

        /// <summary>
        /// Generates a new unique Idempotency key.
        /// This key can be used for ensuring that multiple identical requests do not cause 
        /// unintended side effects, e.g., processing the same transaction more than once.
        /// </summary>
        /// <returns>
        /// A string containing the generated Idempotency key.
        /// The key is generated by the <see cref="IIdempotencyService"/>.
        /// </returns>
        [HttpGet("generate-key")]
        public ActionResult<string> GenerateIdempotencyKey()
        {
            string idempotencyKey = _idempotencyService.GenerateIdempotencyKey();
            return Ok(idempotencyKey);
        }
    }
}
